{
open QuickGraph.FSA.GraphBasedFsa
open QuickGraph.FSA.FsaApproximation
}

tokens {
    _ of FSA<char*Position<JetBrains.ReSharper.Psi.CSharp.Tree.ICSharpLiteralExpression>>
}


options {
    translate = true
    module = "ExtCalc.AbstractParser"
    infEpsPath = epsilons
    pos = uint64
}

module Main

[<Start>]
start: assign+

assign: VARIABLE EQ expr SEMI

expr:   expr (PLUS | MINUS | DIV | MUL) expr  
	| NUMBER
	| VARIABLE 
        | LBRACE expr RBRACE
        | ERROR

